<?phpinclude_once "base_controller.php";Class BaseActionController extends BaseController {		var $applicationFolder;	var $article_options = array();	var $product_options = array();	var $current_member_information = array();	var $current_member_id;		function __construct() {		parent::__construct();				if ($this->enable_session) {		//启用session			@session_start();		}		$this->ci_smarty->assign('lang','chs'); //设置smarty语言				$this->initialize_member_login();				//initialize system message notices		$all_system_message_notice = $this->extend_control->getNewSystemMessageCategories($this->current_member_id);		//print_r($all_system_message_notice);exit();		$this->ci_smarty->assign('all_system_message_notice',$all_system_message_notice);	}		/**	* 检查用户登录	*/	function initialize_member_login(){		//print_r($_COOKIE);exit();		$cmid = $this->getSessionValue('current_member_id');				if( $cmid ) {			$this->current_member_id = $cmid;			$this->extend_control->setCurrentMemberInformation();		} elseif($_COOKIE['member_cookie']) {			//print_r($_COOKIE['member_cookie']);exit();			$this->db->select('member_id,password');			$this->db->from('member');			$this->db->where('account',$_COOKIE['member_cookie']['account']);			$login_information = $this->db->get_first();						if ( !$login_information ) redirect('welcome');			if ($_COOKIE['member_cookie']['key'] != md5($login_information['password'].$login_information['password']) )				redirect('welcome');			$this->extend_control->setCurrentMemberInformation();			redirect('index');		} else {			if(substr_count(current_url(),'welcome')==0&&strrchr(current_url(),"index.php")!="index.php"&&strrchr(current_url(),"index.php/")!="index.php/"){				redirect('welcome?ref='.rawurlencode(current_url()));			}else{				redirect('welcome');			}		}	}		/**	* 工具函数：发送系统消息	*/	function system_message($data){			$data['created_time'] = $this->current_time;		$data['member_id'] = $this->current_member_id;				$check_data = array('member_id'		=>	$data['member_id'],							'category'		=>	$data['category'],							'type'			=>	$data['type'],							'code'			=>	$data['code']							);/*--------------------------------------------------------------- * 发布活动后通知全部好友 *--------------------------------------------------------------- */		if ($data['type'] == 'publish_activity' ) {			$friend_list = $this->extend_control->getAllFriendsBasic( $this->current_member_information );			foreach ($friend_list as $member_information) {				$data['member_id'] = $this->current_member_id;				$data['target_id'] = $member_information['member_id'];								$check_data['target_id'] = $member_information['member_id'];								if ($this->checkSystemMessageByData($check_data)) {					$this->db->insert('system_message',$data);				}			}/*--------------------------------------------------------------- * 修改活动内容后通知所有attend member *--------------------------------------------------------------- */		} elseif ($data['type'] == 'edit_activity') {			$activity_id = $data['code'];			$all_member_information = $this->extend_control->getActivityAttendMemberId($data['code']);						foreach ($all_member_information as $member_information) {							$data['target_id'] = $member_information['member_id'];								$check_data['target_id'] = $member_information['member_id'];								if ($this->checkSystemMessageByData($check_data)) {					$this->db->insert('system_message',$data);				}			}/*--------------------------------------------------------------- * 有人评论活动后通知publisher *--------------------------------------------------------------- */		} elseif ($data['category'] == 'activity' && $data['type'] == 'new_comment') {						$check_data['member_id'] = $data['member_id'];			$check_data['target_id'] = $data['target_id'];						if ($this->checkSystemMessageByData($check_data)) {					$this->db->insert('system_message',$data);			}/*--------------------------------------------------------------- * publisher回复评论后通知原作者 *--------------------------------------------------------------- */					} elseif($data['category'] == 'activity' && $data['type'] == 'new_reply') {						$check_data['target_id'] = $data['target_id'];						if ($this->checkSystemMessageByData($check_data)) {					$this->db->insert('system_message',$data);			}/*--------------------------------------------------------------- * 有人报名活动后通知publisher *--------------------------------------------------------------- */			} elseif($data['category'] == 'activity' && $data['type'] == 'attend_activity') {						$check_data['target_id'] = $data['target_id'];						if ($this->checkSystemMessageByData($check_data)) {					$this->db->insert('system_message',$data);			}/*--------------------------------------------------------------- * 活动报名通过后通知用户 *--------------------------------------------------------------- */			} elseif($data['category'] == 'activity' && $data['type'] == 'activity_apply_pass') {						$check_data['target_id'] = $data['target_id'];						if ($this->checkSystemMessageByData($check_data)) {					$this->db->insert('system_message',$data);			}/*--------------------------------------------------------------- * [unfinished] 邀请好友参加活动 *--------------------------------------------------------------- */			} elseif ($data['type'] == 'invite_attend_activity') {					$check_data['target_id'] = $data['target_id'];							if ($this->checkSystemMessageByData($check_data)) {				$this->db->insert('system_message',$data);			}/*--------------------------------------------------------------- * 好友申请 *--------------------------------------------------------------- */			} elseif ($data['category'] == 'friend' && $data['type'] == 'apply_friend') {			$check_data['target_id'] = $data['target_id'];			if ($this->checkSystemMessageByData($check_data)) {				$this->db->insert('system_message',$data);			}		} elseif ($data['category'] == 'friend' && $data['type'] == 'add_friend'){			$check_data['target_id'] = $data['target_id'];			if ($this->checkSystemMessageByData($check_data)) {				$this->db->insert('system_message',$data);			}/*--------------------------------------------------------------- * 有新留言 *--------------------------------------------------------------- */			} elseif ($data['category'] == 'member_message' && $data['type'] == 'new_message') {			$check_data['target_id'] = $data['target_id'];			if ($this->checkSystemMessageByType($check_data)) {				$this->db->insert('system_message',$data);			} else {				$data['is_new']='Y';				$this->db->where('member_id',$data['member_id']);				$this->db->where('target_id',$data['target_id']);				$this->db->where('category',$data['category']);				$this->db->where('type',$data['type']);				$this->db->update('system_message',$data);			}/*--------------------------------------------------------------- * 微型书有新评论 *--------------------------------------------------------------- */			} elseif ($data['category'] == 'blog' && $data['type'] == 'new_comment') {			$check_data['target_id'] = $data['target_id'];			if ($this->checkSystemMessageByData($check_data)) {				$this->db->insert('system_message',$data);			}		} //end all cases	}		/**	* 工具函数：检查是否存在完全相同的系统消息	*	* @return 	false=有重复 	true=无重复	*/	function checkSystemMessageByData($check_data) {		if( $check_data['member_id'] == $check_data['target_id'] ) return false; //invalid		$this->db->where($check_data);		$count = $this->db->count_all_results('system_message');		return $count>0 ? false : true;	}		/**	* 工具函数：检查是否存在相同类型的系统消息	*	* @return 	false=有重复 	true=无重复	*/	function checkSystemMessageByType($check_data){		if($check_data['member_id'] == $check_data['target_id']) return false;		$this->db->where('member_id',$check_data['member_id']);		$this->db->where('target_id',$check_data['target_id']);		$this->db->where('category',$check_data['category']);		$this->db->where('type',$check_data['type']);		$count = $this->db->count_all_results('system_message');		return $count>0 ? false : true;	}		/**	* 显示页面	*	* @author franklsf95	*	* @see BaseController::display()	*/	function display( $templateName, $templateTitle, $moreCss='', $moreJs='' ) {		$templateTitle .= ' | '.$this->current_member_information['member_name'];		parent::display( $templateName, $templateTitle, $moreCss, $moreJs, 'member' );	}}?>